#!/bin/bash

# Script simplificado para mostrar instrucciones de creación del Pipeline Job
set -euo pipefail

echo "=========================================="
echo "🎯 CÓMO CREAR EL PIPELINE JOB EN JENKINS"
echo "=========================================="
echo ""
echo "❌ PROBLEMA IDENTIFICADO:"
echo "   El script Groovy NO se puede ejecutar en la consola de Jenkins"
echo "   La función 'pipeline()' solo funciona en Pipeline Jobs"
echo ""
echo "✅ SOLUCIÓN: Crear un Pipeline Job"
echo ""
echo "=========================================="
echo "📋 INSTRUCCIONES PASO A PASO"
echo "=========================================="
echo ""
echo "🌐 1. Abrir Jenkins en el navegador:"
echo "   URL: http://20.8.71.3:8080"
echo "   Usuario: admin"
echo "   Contraseña: admin123"
echo ""
echo "➕ 2. Crear nuevo item:"
echo "   - Click en 'New Item' (o 'Nuevo Elemento')"
echo "   - Nombre: error-testing-pipeline"
echo "   - Seleccionar: Pipeline"
echo "   - Click 'OK'"
echo ""
echo "⚙️  3. Configurar parámetros:"
echo "   - Marcar ✅ 'This project is parameterized'"
echo ""
echo "   📝 Parámetro 1 - Choice Parameter:"
echo "      Name: ERROR_TYPE"
echo "      Choices (uno por línea):"
echo "         ALL"
echo "         MEMORY" 
echo "         FILESYSTEM"
echo "         NETWORK"
echo "         CRASH"
echo "      Description: Tipo de error a simular"
echo ""
echo "   📝 Parámetro 2 - Boolean Parameter:"
echo "      Name: FORCE_FAILURE"
echo "      Default Value: false"
echo "      Description: Forzar que el pipeline falle"
echo ""
echo "   📝 Parámetro 3 - String Parameter:"
echo "      Name: DURATION_SECONDS"
echo "      Default Value: 30"
echo "      Description: Duración de cada etapa en segundos"
echo ""
echo "📄 4. Configurar el script:"
echo "   - En la sección 'Pipeline':"
echo "   - Definition: Pipeline script"
echo "   - En el campo 'Script':"
echo ""
echo "     📁 Copiar TODO el contenido del archivo:"
echo "     $(pwd)/jenkins_error_testing_pipeline_fixed.groovy"
echo ""
echo "💾 5. Guardar:"
echo "   - Click 'Save'"
echo ""
echo "🚀 6. Ejecutar:"
echo "   - Click 'Build with Parameters'"
echo "   - Seleccionar parámetros deseados"
echo "   - Click 'Build'"
echo ""
echo "=========================================="
echo "📊 MONITOREO DESPUÉS DE LA EJECUCIÓN"
echo "=========================================="
echo ""
echo "📈 Dashboards de Grafana para verificar errores:"
echo "   - http://135.236.73.36/d/f50a7480-4ff6-4f08-b287-63daea6d00ae"
echo "   - http://135.236.73.36/d/ca7aa68f-5b77-4205-a6cb-b2f7133966f2"
echo ""
echo "🔍 Comandos para verificar:"
echo "   kubectl get pods -n testing-errors"
echo "   kubectl logs -f -n testing-errors deployment/log-generator"
echo ""
echo "=========================================="
echo "📁 ARCHIVOS DISPONIBLES"
echo "=========================================="
echo ""
ls -la *pipeline*.groovy 2>/dev/null || echo "No hay archivos pipeline en el directorio actual"
echo ""
echo "📝 Para ver el contenido del pipeline:"
echo "   cat jenkins_error_testing_pipeline_fixed.groovy"
